security:
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
      algorithm: auto
      cost: 15

  providers:
    app_user_provider:
      entity:
        class: App\Entity\Utilisateur
        property: pseudo # Utilisation du pseudo comme identifiant

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    api_login:
      pattern: ^/api/login
      stateless: true
      json_login:
        check_path: /api/login
        username_path: pseudo
        password_path: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

    main:
      lazy: true
      provider: app_user_provider
      form_login:
        login_path: app_login
        check_path: /login
        default_target_path: /accueil
      logout:
        path: /logout

  access_control:
    - { path: ^/login, roles: PUBLIC_ACCESS }
    - { path: ^/logout, roles: PUBLIC_ACCESS }
    - { path: ^/api/login, roles: PUBLIC_ACCESS }

    #  Accès aux articles (Admin et Donneur)
    - { path: ^/articles/ajouter, roles: [PUBLIC_ACCESS] } # Ajout d'article
    - { path: ^/articles, roles: [ROLE_ADMIN, ROLE_DONNEUR] } # Liste des articles
    - { path: ^/articles/\d+/modifier, roles: [ROLE_ADMIN, ROLE_DONNEUR] } # Modification d'article
    - { path: ^/articles/\d+/supprimer, roles: [ROLE_ADMIN, ROLE_DONNEUR] } # Suppression d'article

    # Réservation limitée aux receveurs
    - { path: ^/articles/\d+/reserver, roles: ROLE_RECEVEUR } # Seuls les receveurs peuvent réserver

    # Page d'accueil accessible à tous
    - { path: ^/accueil, roles: PUBLIC_ACCESS }
